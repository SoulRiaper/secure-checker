/*
 * Veda Platform HTTP Interface
 *
 * API for interacting with the Veda platform services.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SetFieldInIndividualRequest {
    /// The unique identifier of the user's ticket.
    #[serde(rename = "ticket")]
    pub ticket: String,
    /// The unique identifier (URI) of the individual.
    #[serde(rename = "uri")]
    pub uri: String,
    /// An object representing the individual with the field to be set or updated.
    #[serde(rename = "individual", skip_serializing_if = "Option::is_none")]
    pub individual: Option<serde_json::Value>,
    /// Optional flag to prepare events.
    #[serde(rename = "prepare_events", skip_serializing_if = "Option::is_none")]
    pub prepare_events: Option<bool>,
    /// Optional byte value for assigned subsystems.
    #[serde(rename = "assigned_subsystems", skip_serializing_if = "Option::is_none")]
    pub assigned_subsystems: Option<i32>,
    /// Optional event identifier.
    #[serde(rename = "event_id", skip_serializing_if = "Option::is_none")]
    pub event_id: Option<String>,
    /// Optional transaction identifier.
    #[serde(rename = "transaction_id", skip_serializing_if = "Option::is_none")]
    pub transaction_id: Option<String>,
}

impl SetFieldInIndividualRequest {
    pub fn new(ticket: String, uri: String) -> SetFieldInIndividualRequest {
        SetFieldInIndividualRequest {
            ticket,
            uri,
            individual: None,
            prepare_events: None,
            assigned_subsystems: None,
            event_id: None,
            transaction_id: None,
        }
    }
}

